allprojects {
    group = 'com.booking.replication'
    version = '0.16.0-rc2-SNAPSHOT'
}

ext {

    // Dependencies Versions
    log4j2Version = '2.11.0'

    slf4jVersion  = '1.7.25'

    binlogConnectorVersion = '0.16.1'

    commonsCliVersion = '1.4'

    kafkaAvroSerializerVersion = '5.0.1'

    dropwizardMetricsVersion = '4.0.2'

    prometheusSimpleClientVersion = '0.0.23'

    mysqlConnectorJavaVersion = '5.1.47'

    apacheAvroVersion = '1.8.2'

    apacheCommonsDBCP2Version = '2.7.0'

    apacheCuratorVersion = '4.0.1'

    apacheKafka_2_12Version = '1.1.0'

    groovyVersion = '2.4.15'

    jacksonVersion = '2.9.8'

    jettyVersion = '9.4.14.v20181114'

    junitVersion = '4.12'

    spockVersion = '1.0-groovy-2.4'

    testcontainersVersion = '1.8.0'


    // Profiles Dependencies Versions
    hbaseDependencies = [
            'org.apache.hbase:hbase-client:1.2.0',
            'org.apache.hbase:hbase-common:1.2.0',
            'org.apache.hbase:hbase-server:1.2.0',
            'com.google.protobuf:protobuf-java:2.5.0',
            'com.google.guava:guava:15.0'
    ]
    bigTableDependencies = [
            'com.google.protobuf:protobuf-java:3.6.0',
            'com.google.guava:guava:26.0-jre',
            'com.google.cloud.bigtable:bigtable-hbase-1.x:1.8.0'
    ]
    isHBase = System.properties['sink'] == 'hbase'
    isBigTable = System.properties['sink'] == 'bigtable'

    if (!isHBase && !isBigTable) {
        isHBase = true
    }

}

task printProps {
    doLast {
        println dockerImageZookeeper
        println dockerImageKafka
        println System.properties['system']
        println(isHBase)
        println(isBigTable)
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    test {
        testLogging.showStandardStreams = true
        systemProperty "dockerImageZookeeper", project.getProperty("dockerImageZookeeper")
        systemProperty "dockerImageKafka", project.getProperty("dockerImageKafka")
    }

    repositories {
        mavenLocal()
        maven {
            url = 'https://repository.cloudera.com/artifactory/cloudera-repos/'
        }
        maven {
            url = 'http://packages.confluent.io/maven/'
        }
        maven {
            url = 'https://repo1.maven.org/maven2'
        }
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    dependencies {
        implementation "org.apache.logging.log4j:log4j-core:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-1.2-api:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-jul:$log4j2Version"
        implementation "org.slf4j:slf4j-api:$slf4jVersion"

        implementation 'org.codehaus.sonar:sonar-maven-plugin:5.1'
    }

    sourceCompatibility = '1.8'

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

}
