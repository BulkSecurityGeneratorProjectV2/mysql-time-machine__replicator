allprojects {
    group = 'com.booking.replication'
    version = '0.16.0-rc2-SNAPSHOT'
}

ext {
    log4j2Version = '2.11.0'
    slf4jVersion  = '1.7.25'
    binlogConnectorVersion = '0.20.1'
    hbaseDependencies = [
            'org.apache.hbase:hbase-client:1.2.0',
            'org.apache.hbase:hbase-common:1.2.0',
            'org.apache.hbase:hbase-server:1.2.0',
            'com.google.protobuf:protobuf-java:2.5.0',
            'com.google.guava:guava:15.0'
    ]
    bigTableDependencies = [
            'com.google.protobuf:protobuf-java:3.6.0',
            'com.google.guava:guava:26.0-jre',
            'com.google.cloud.bigtable:bigtable-hbase-1.x:1.8.0'
    ]
    isHBase = System.properties['sink'] == 'hbase'
    isBigTable = System.properties['sink'] == 'bigtable'
}

task printProps {
    doLast {
        println dockerImageZookeeper
        println dockerImageKafka
        println System.properties['system']
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '6.0.1'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    //sonarqube {
    //    properties {
    //        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    //    }
    //}

    test {
        testLogging.showStandardStreams = true
            systemProperty "dockerImageZookeeper", project.getProperty("dockerImageZookeeper")
            systemProperty "dockerImageKafka", project.getProperty("dockerImageKafka")
    }

    repositories {
        mavenLocal()
        maven {
            url = 'https://repository.cloudera.com/artifactory/cloudera-repos/'
        }
        maven {
            url = 'http://packages.confluent.io/maven/'
        }
        maven {
            url = 'https://repo1.maven.org/maven2'
        }
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    dependencies {
        implementation "org.apache.logging.log4j:log4j-core:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-1.2-api:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
        implementation "org.apache.logging.log4j:log4j-jul:$log4j2Version"
        implementation "org.slf4j:slf4j-api:$slf4jVersion"

        implementation 'org.codehaus.sonar:sonar-maven-plugin:5.1'
    }

    test {
        testLogging.showStandardStreams = true
    }

    sourceCompatibility = '1.8'

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

}
